{"uid":"9f035ee01788cbfc","name":"File Upload Documents Test","fullName":"tests.scripts.upload.test_successful_file_upload.TestSuccessUploadBySelect#test_upload_file_docs_TCP_FUP_03","historyId":"51e5148341a44fc5ccce742bd61ff5c7","time":{"start":1723919808534,"stop":1723919808535,"duration":1},"status":"broken","statusMessage":"FileNotFoundError: File not found: /home/runner/work/selenium_demo/data/attachment/testFile.docx","statusTrace":"self = <test_successful_file_upload.TestSuccessUploadBySelect object at 0x7fd63b034400>\nuploader = <pages.upload_page.Uploader object at 0x7fd63b065400>\nfile_name = 'testFile.docx'\n\n    @pytest.mark.ui\n    @pytest.mark.positive\n    @allure.title(\"File Upload Documents Test\")\n    @allure.id(\"TCP-FUP-03\")\n    @allure.tag( \"Success\", \"Doc Files\")\n    @pytest.mark.parametrize(\"file_name\", ['testFile.docx', 'testFile.pdf'])\n    def test_upload_file_docs_TCP_FUP_03(self, uploader, file_name):\n>       uploader.upload_file_runner(file_name)\n\ntests/scripts/upload/test_successful_file_upload.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/upload_page.py:96: in upload_file_runner\n    self.upload_file(file_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.upload_page.Uploader object at 0x7fd63b065400>\nfile_name = 'testFile.docx'\n\n    def upload_file(self, file_name: str):\n        initial_path = os.path.abspath(os.path.join(\"..\", \"data\", \"attachment\", file_name))\n        if not os.path.exists(initial_path):\n>           raise FileNotFoundError(f\"File not found: {initial_path}\")\nE           FileNotFoundError: File not found: /home/runner/work/selenium_demo/data/attachment/testFile.docx\n\npages/upload_page.py:20: FileNotFoundError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1723919794703,"stop":1723919804600,"duration":9897},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"uploader","time":{"start":1723919807924,"stop":1723919808533,"duration":609},"status":"passed","steps":[{"name":"▸ Navigate to the File Upload Page","time":{"start":1723919808238,"stop":1723919808357,"duration":119},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"▸ Validate File Upload Page Components","time":{"start":1723919808357,"stop":1723919808533,"duration":176},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true},{"name":"_browser_per_test","time":{"start":1723919807924,"stop":1723919807924,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"FileNotFoundError: File not found: /home/runner/work/selenium_demo/data/attachment/testFile.docx","statusTrace":"self = <test_successful_file_upload.TestSuccessUploadBySelect object at 0x7fd63b034400>\nuploader = <pages.upload_page.Uploader object at 0x7fd63b065400>\nfile_name = 'testFile.docx'\n\n    @pytest.mark.ui\n    @pytest.mark.positive\n    @allure.title(\"File Upload Documents Test\")\n    @allure.id(\"TCP-FUP-03\")\n    @allure.tag( \"Success\", \"Doc Files\")\n    @pytest.mark.parametrize(\"file_name\", ['testFile.docx', 'testFile.pdf'])\n    def test_upload_file_docs_TCP_FUP_03(self, uploader, file_name):\n>       uploader.upload_file_runner(file_name)\n\ntests/scripts/upload/test_successful_file_upload.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/upload_page.py:96: in upload_file_runner\n    self.upload_file(file_name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.upload_page.Uploader object at 0x7fd63b065400>\nfile_name = 'testFile.docx'\n\n    def upload_file(self, file_name: str):\n        initial_path = os.path.abspath(os.path.join(\"..\", \"data\", \"attachment\", file_name))\n        if not os.path.exists(initial_path):\n>           raise FileNotFoundError(f\"File not found: {initial_path}\")\nE           FileNotFoundError: File not found: /home/runner/work/selenium_demo/data/attachment/testFile.docx\n\npages/upload_page.py:20: FileNotFoundError","steps":[{"name":"1. Insert the file name with the extension","time":{"start":1723919808534,"stop":1723919808534,"duration":0},"status":"broken","statusMessage":"FileNotFoundError: File not found: /home/runner/work/selenium_demo/data/attachment/testFile.docx\n","statusTrace":"  File \"/home/runner/work/selenium_demo/selenium_demo/pages/upload_page.py\", line 96, in upload_file_runner\n    self.upload_file(file_name)\n  File \"/home/runner/work/selenium_demo/selenium_demo/pages/upload_page.py\", line 20, in upload_file\n    raise FileNotFoundError(f\"File not found: {initial_path}\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1723919809418,"stop":1723919809493,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"Doc Files"},{"name":"tag","value":"Success"},{"name":"as_id","value":"TCP-FUP-03"},{"name":"tag","value":"Upload"},{"name":"story","value":"Upload/ Select File"},{"name":"epic","value":"Uploader"},{"name":"tag","value":"positive"},{"name":"tag","value":"ui"},{"name":"parentSuite","value":"tests.scripts.upload"},{"name":"suite","value":"test_successful_file_upload"},{"name":"subSuite","value":"TestSuccessUploadBySelect"},{"name":"host","value":"fv-az1109-164"},{"name":"thread","value":"2080-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.scripts.upload.test_successful_file_upload"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'chrome'"},{"name":"file_name","value":"'testFile.docx'"}],"links":[{"name":"File Uploader Page","url":"https://the-internet.herokuapp.com/upload","type":"tms"}],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["Doc Files","ui","Upload","positive","Success"]},"source":"9f035ee01788cbfc.json","parameterValues":["'chrome'","'testFile.docx'"]}